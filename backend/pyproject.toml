[tool.poetry]
name = "yet_another_calendar"
version = "0.1.0"
description = ""
authors = [
    "AzamatKomaev <azamatkomaev15@gmail.com>",
    "Ivan Popov <ma1n.py@yandex.ru>"

]
maintainers = [
    "Gregory Shevchuk <2097255@mail.ru>",
]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.111.0"
uvicorn = { version = "^0.30.1", extras = ["standard"] }
pydantic = "^2"
pydantic-settings = "^2"
yarl = "^1"
ujson = "^5.10.0"
redis = {version = "^5.0.7", extras = ["hiredis"]}
aiofiles = "^24.1.0"
httptools = "^0.6.1"
pymongo = "^4.8.0"
mypy = "^1.11.2"
environs = "^11.0.0"
beautifulsoup4 = "^4.12.3"
lxml = "^5.3.0"
httpx = {extras = ["http2"], version = "^0.27.2"}
fastapi-cache2 = "^0.2.2"
icalendar = "^6.0.0"
pytz = "^2024.2"
types-pytz = "^2024.2.0.20241003"
reretry = "^0.11.8"
loguru = "^0.7.2"


[tool.poetry.group.dev.dependencies]
pytest = "^8"
ruff = "^0.5.0"
mypy = "^1.10.1"
black = "^24.4.2"
pytest-cov = "^5"
anyio = "^4"
pytest-env = "^1.1.3"
fakeredis = "^2.23.3"
httpx = "^0.27.0"

[tool.isort]
profile = "black"
multi_line_output = 3
src_paths = ["yet_another_calendar",]

[tool.mypy]
strict = true
ignore_missing_imports = true
allow_subclassing_any = true
allow_untyped_calls = true
pretty = true
show_error_codes = true
implicit_reexport = true
allow_untyped_decorators = true
warn_return_any = false
warn_no_return = false

# Remove this and add `types-redis`
# when the issue https://github.com/python/typeshed/issues/8242 is resolved.
[[tool.mypy.overrides]]
module = [
    'redis.asyncio'
]
ignore_missing_imports = true

[tool.pytest.ini_options]
filterwarnings = [
    "error",
    "ignore::DeprecationWarning",
    "ignore:.*unclosed.*:ResourceWarning",
]
env = [
    "YET_ANOTHER_CALENDAR_ENVIRONMENT=pytest",
    "YET_ANOTHER_CALENDAR_DB_BASE=yet_another_calendar_test",
]

[tool.ruff]
lint.select = [
    "A",  # prevent using keywords that clobber python builtins
    "N",  # pep8-naming
    "B",  # bugbear: security warnings
    "E",  # pycodestyle
    "F",  # pyflakes
    "ISC",  # implicit string concatenation
    "UP",  # alert you when better syntax is available in your python version
    "RUF",  # the ruff developer's own rules

    "T20",  # flake8-print
    "T10",  # flake8-debugger
    "LOG",  # flake8-logging
    "COM",  # flake8-logging
    "ASYNC",  # flake8-async
    "ANN",  # flake8-annotations
    "PL",  # Pylint
]
line-length = 119
lint.ignore = [
    "ANN101",
    "ANN401",
    "ANN102",
    "B008",  # Depends
    "PLR0913"  # Depends
]
exclude = [
    ".venv/"
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "S101", # Use of assert detected
]

[tool.ruff.lint.pydocstyle]
convention = "pep257"
ignore-decorators = ["typing.overload"]

[tool.ruff.lint.pylint]
allow-magic-value-types = ["int", "str", "float", "bytes"]


[fastapi-template.options]
project_name = "yet_another_calendar"
api_type = "rest"
enable_redis = "True"
enable_rmq = "None"
ci_type = "github"
enable_migrations = "None"
enable_taskiq = "None"
enable_kube = "True"
kube_name = "yet-another-calendar"
enable_routers = "True"
enable_kafka = "None"
enable_loguru = "True"
traefik_labels = "None"
add_dummy = "None"
orm = "none"
self_hosted_swagger = "True"
prometheus_enabled = "None"
sentry_enabled = "None"
otlp_enabled = "None"
gunicorn = "None"
add_users = "None"
cookie_auth = "None"
jwt_auth = "None"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
